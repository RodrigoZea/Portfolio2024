/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
 
import React, { useEffect, useMemo, useRef } from "react";
import { useGLTF, useAnimations, useFBX, useScroll } from "@react-three/drei";
import { useFrame, useGraph } from "@react-three/fiber";
import * as SkeletonUtils from 'three/addons/utils/SkeletonUtils.js';
 
export default function Model(props) {
  const { animation } = props;
  const group = useRef();
  const { scene, materials } = useGLTF("./models/mascotFromMixamo.glb");
  const copiedCharacter = useMemo(() => SkeletonUtils.clone(scene), [scene])
  const {nodes} = useGraph(copiedCharacter);
 
  const { animations: thoughtAnimation } = useFBX("./animations/Thoughtful.fbx");

  const initialRotation = Math.PI; 
 
  thoughtAnimation[0].name = "Thought";

  const { actions } = useAnimations(thoughtAnimation, group)
  const scroll = useScroll()
 
  useEffect(() => {
    actions["Thought"].reset().play();
  }, [])
 
  useFrame(() => {
 


    group.current.rotation.y = ((scroll.offset * 4.1 *Math.PI*1)+ initialRotation)
    group.current.position.set(-scroll.offset*1.5, 0, scroll.offset*2.5)


  })
 
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group 
          name="Armature" 
          rotation={[0, 0, 0]} 
          scale={0.5}
        >
          <skinnedMesh
            name="CharacterRetopo"
            geometry={nodes.CharacterRetopo.geometry}
            skeleton={nodes.CharacterRetopo.skeleton}
            material={materials["Material.004"]}          
          />
          <primitive object={nodes.mixamorigHips} />
        </group>
      </group>
    </group>
  );
}
 
useGLTF.preload("./models/mascotFromMixamo.glb");